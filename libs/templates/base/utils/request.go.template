package utils

import (
	"encoding/base64"
	"encoding/json"
	"errors"

	"github.com/gofiber/fiber/v2"
)

func EndOutPut(str string) (res string) {
	return str
}

func BodyParser(c *fiber.Ctx) (map[string]string, error) {
	var bodyData map[string]string

	// Se crea una variable donde se guardara el parseo del json que se encontraba codificado en base64
	var jsonData map[string]string

	// Se parsea el contenido enviado en el cuerpo
	if err := c.BodyParser(&bodyData); err != nil {
		return jsonData, errors.New(EndOutPut("{\"message\": \"ERRN100xA\"}"))
	}

	// Se verifica que exista el campo data dentro del json del body
	if bodyData["data"] == "" {
		return jsonData, errors.New(EndOutPut("{\"message\": \"ERRN101xA\"}"))
	}

	// Se decodifica en base64 el valor del campo data
	decoded, err := base64.StdEncoding.DecodeString(bodyData["data"])

	// Se verifica que no haya ocurrido un error al decodificar el base64
	if err != nil {
		return jsonData, errors.New(EndOutPut("{\"message\": \"ERRN102xA\"}"))
	}

	// Se parsea el json codificado en base64
	json.Unmarshal([]byte(string(decoded)), &jsonData)
	return jsonData, nil
}
